[bandit]
# Bandit configuration file for security scanning

# Test IDs to skip
skips = B101,B601,B603,B607

# Test IDs to include (empty means include all)
tests = 

# Paths to exclude from scanning
exclude_dirs = /tests,/migrations,/venv,/env,/.venv,/.env,/build,/dist

# Severity level threshold (low, medium, high)
level = low

# Confidence level threshold (low, medium, high)
confidence = low

# Output format (txt, json, csv, xml, html)
format = txt

# Additional options
recursive = true
aggregate = file
number = 3
context_lines = 3

# Custom test configurations
[bandit.assert_used]
# Skip assert_used test in test files
skips = */tests/*

[bandit.hardcoded_password_string]
# Skip hardcoded password checks in test files and configuration examples
skips = */tests/*,*/examples/*,*/docs/*

[bandit.hardcoded_password_funcarg]
# Skip hardcoded password function argument checks in test files
skips = */tests/*

[bandit.hardcoded_password_default]
# Skip hardcoded password default argument checks in test files
skips = */tests/*

[bandit.request_with_no_cert_validation]
# Allow requests without certificate validation in test environments
skips = */tests/*

[bandit.subprocess_popen_with_shell_equals_true]
# Allow shell=True in specific cases with proper justification
skips = 

[bandit.subprocess_without_shell_equals_false]
# Ensure subprocess calls don't use shell=True by default
skips = 

[bandit.try_except_pass]
# Flag try/except blocks that pass silently
skips = 

[bandit.exec_used]
# Flag use of exec() function
skips = 

[bandit.eval_used]
# Flag use of eval() function
skips = 

# Blacklist and whitelist configurations
[bandit.blacklists]
# Calls to consider always insecure
calls = eval,exec,compile

# Imports to consider insecure
imports = pickle,cPickle,subprocess,os

[bandit.whitelists]
# Calls that are considered safe in specific contexts
calls = 

# Imports that are considered safe
imports = 

# Plugin-specific configurations
[bandit.plugins]
# Enable all security plugins
B101 = assert_used
B102 = exec_used
B103 = set_bad_file_permissions
B104 = hardcoded_bind_all_interfaces
B105 = hardcoded_password_string
B106 = hardcoded_password_funcarg
B107 = hardcoded_password_default
B108 = hardcoded_tmp_directory
B110 = try_except_pass
B112 = try_except_continue
B201 = flask_debug_true
B301 = pickle_load
B302 = marshal_load
B303 = md5_insecure
B304 = des_insecure
B305 = cipher_insecure
B306 = mktemp_q
B307 = eval_used
B308 = mark_safe_used
B309 = httpsconnection_insecure
B310 = urllib_urlopen
B311 = random_module
B312 = telnetlib_usage
B313 = xml_bad_cElementTree
B314 = xml_bad_ElementTree
B315 = xml_bad_expatreader
B316 = xml_bad_expatbuilder
B317 = xml_bad_sax
B318 = xml_bad_minidom
B319 = xml_bad_pulldom
B320 = xml_bad_etree
B321 = ftplib_usage
B322 = input_usage
B323 = unverified_context
B324 = hashlib_insecure
B325 = tempnam_usage
B401 = import_telnetlib
B402 = import_ftplib
B403 = import_pickle
B404 = import_subprocess
B405 = import_xml_etree
B406 = import_xml_sax
B407 = import_xml_expat
B408 = import_xml_minidom
B409 = import_xml_pulldom
B410 = import_lxml
B411 = import_xmlrpclib
B412 = import_httpoxy
B501 = request_with_no_cert_validation
B502 = ssl_with_bad_version
B503 = ssl_with_bad_defaults
B504 = ssl_with_no_version
B505 = weak_cryptographic_key
B506 = yaml_load
B507 = ssh_no_host_key_verification
B601 = paramiko_calls
B602 = subprocess_popen_with_shell_equals_true
B603 = subprocess_without_shell_equals_false
B604 = any_other_function_with_shell_equals_true
B605 = start_process_with_a_shell
B606 = start_process_with_no_shell
B607 = start_process_with_partial_path
B608 = hardcoded_sql_expressions
B609 = linux_commands_wildcard_injection
B610 = django_extra_used
B611 = django_rawsql_used
B701 = jinja2_autoescape_false
B702 = use_of_mako_templates
B703 = django_mark_safe